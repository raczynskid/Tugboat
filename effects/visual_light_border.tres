[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "alpha"

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeTransformDecompose" id=4]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Input:2
	mat4 n_out2p0 = WORLD_MATRIX;

// TransformDecompose:4
	vec3 n_out4p0 = n_out2p0[0].xyz;
	vec3 n_out4p1 = n_out2p0[1].xyz;
	vec3 n_out4p2 = n_out2p0[2].xyz;
	vec3 n_out4p3 = n_out2p0[3].xyz;

// VectorDecompose:3
	float n_out3p0 = n_out4p2.x;
	float n_out3p1 = n_out4p2.y;
	float n_out3p2 = n_out4p2.z;

// Output:0
	COLOR.a = n_out3p2;

}

void fragment() {
// Color:3
	vec3 n_out3p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out3p1 = 1.000000;

// Input:2
	float n_out2p0 = COLOR.a;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -84.4444, -89.7223 )
nodes/vertex/0/position = Vector2( 880, 120 )
nodes/vertex/2/node = SubResource( 2 )
nodes/vertex/2/position = Vector2( -440, 180 )
nodes/vertex/3/node = SubResource( 3 )
nodes/vertex/3/position = Vector2( 420, 140 )
nodes/vertex/4/node = SubResource( 4 )
nodes/vertex/4/position = Vector2( -120, 120 )
nodes/vertex/connections = PoolIntArray( 2, 0, 4, 0, 4, 2, 3, 0, 3, 2, 0, 7 )
nodes/fragment/0/position = Vector2( 1300, 120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 560, 400 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( 625.833, 114.417 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 2, 0, 0, 1 )
